@model EnglishDictApp.Web.ViewModels.Exam.ExamAnswerViewModel

@{
    ViewBag.Title = "AskQuestion";
}

<div class="align-content-xl-start">
    <h4>Quess the word:</h4>
    <div class="question">
            @for (int i = 0; i < Model.CurrentQuestion.Meanings.Count(); i++)
            {
                <ul>
                    <li>
                        @Model.CurrentQuestion.Meanings[i];
                    </li>
                </ul>
            }
    </div>
</div>
@using (Html.BeginForm("AnswerToAnswer", "Exam"))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.CurrentQuestion.Title)
    @Html.HiddenFor(m => m.Grade);
    for (int i = 0; i < Model.CurrentQuestion.Meanings.Count(); i++)
    {
        @Html.HiddenFor(m => m.CurrentQuestion.Meanings[i])
    } 
    @Html.HiddenFor(m => m.CurrentQuestionSequelNumber)
    @Html.HiddenFor(m => m.NumberOfQuestions)
    @Html.HiddenFor(m => m.RightAnswers)
    for (int i = 0; i < Model.CurrentQuestion.Sentences.Count(); i++)
    {
        @Html.HiddenFor(m => m.CurrentQuestion.Sentences[i])
    }

    <div class="form-horizontal">
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.CurrentAnswer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurrentAnswer, new { htmlAttributes = new { @class = "form-control" } })
                <br />
                @Html.ValidationMessageFor(model => model.CurrentAnswer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-primary" />
                @Html.ActionLink("Back to home", "Index", "Home", null, new { @class = "btn btn-success" })
            </div>
        </div>
    </div>
}
